// Given an input string s, reverse the order of the words.

A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.

Return a string of the words in reverse order concatenated by a single space.

Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.

 

Example 1:

Input: s = "the sky is blue"
Output: "blue is sky the"


class Solution {
public:
    string reverseWords(string s) {
       
    string ans = "";
    string temp = "";
    int len = s.length() - 1;
    int start = -1; // Variable to track the start of non-space characters

    // Remove leading spaces
    for (int i = 0; i <= len; i++)
    {
        if (s[i] != ' ')
        {
            start = i;
            break;
        }
    }

    // Remove trailing spaces
    for (int i = len; i >= 0; i--)
    {
        if (s[i] != ' ')
        {
            len = i;
            break;
        }
    }

     for (int i = len; i >= start; i--)
    {
        if (s[i] == ' ' )
        {
            if(!ans.empty())
            {
            temp = temp + ans + " ";
            ans = "";
            }
        }
        else
        ans = s[i] + ans;
    }
    temp = temp + ans;
    return temp;



    }
};