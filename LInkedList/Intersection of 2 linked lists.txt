class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        if (headA == NULL || headB == NULL)
            return NULL;

        ListNode *temp1 = headA;
        ListNode *temp2 = headB;
        int l1 = 0, l2 = 0;

        while (temp1 != NULL) {
            l1++;
            temp1 = temp1->next;
        }

        while (temp2 != NULL) {
            l2++;
            temp2 = temp2->next;
        }

        temp1 = headA;
        temp2 = headB;

        if (l1 > l2) {
            int diff = l1 - l2;
            while (diff > 0) {
                temp1 = temp1->next;
                diff--;
            }
        } else {
            int diff = l2 - l1;
            while (diff > 0) {
                temp2 = temp2->next;
                diff--;
            }
        }

        while (temp1 != NULL && temp2 != NULL) {
            if (temp1 == temp2) {
                return temp1; // Intersection found
            }
            temp1 = temp1->next;
            temp2 = temp2->next;
        }

        return NULL; // No intersection found
    }
};
